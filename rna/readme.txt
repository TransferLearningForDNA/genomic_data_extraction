RNA Data Extraction Logic

This repository contains Python scripts for extracting RNA data from the NCBI Sequence Read Archive (SRA) database. It includes functionalities for querying metadata from the SRA database, retrieving experiment accession numbers, and downloading SRA data.

Files:

1. query_sra.py

    This script queries the NCBI SRA database for a given species and taxonomy ID. It retrieves metadata for RNA-Seq experiments and stores the results in a DataFrame.
        Functions:

            query_sra(species, taxonomy_id): Queries the SRA database for metadata of RNA-Seq experiments for a given species and taxonomy ID.

            query_and_get_srx_accession_ids(species_data): Calls query_sra() for each species in a dictionary and creates a dictionary mapping species names to their experiment accession numbers (SRX IDs).

            view_srx_metadata(species_srx_map): Populates a dictionary with DataFrames containing metadata for each species (optional).

            SRX_to_SRR_csv(species_srx_map, output_file): Saves the species names, taxonomy IDs, SRX IDs, and corresponding SRR IDs to a CSV file.

Usage:

    Querying SRA Database:

        Edit species_data dictionary in query_sra.py to specify the species of interest along with their taxonomy IDs.

        Run query_sra.py to query the SRA database and generate a CSV file (output_srx_srr.csv) containing the metadata.

2. download_sra_data.py

    This script downloads SRA data using the fasterq-dump command for each SRR ID listed in the CSV file generated by query_and_get_srx_accession_ids().
        Function:
            download_sra_data(csv_file_path, output_directory, limit=1): Downloads SRA data using fasterq-dump command from the CSV file containing SRR IDs.


Usage:

    Downloading SRA Data:

        Ensure SRA-toolkit is installed correctly in your environment.

        Specify the CSV file path (csv_file_path) and output directory (output_directory) in download_sra_data.py.

        Run download_sra_data.py to download SRA data using fasterq-dump command.

Notes:

    Ensure proper installation of SRA-toolkit for downloading SRA data.

    Adjust the download limit parameter in download_sra_data.py according to memory constraints and download requirements.
