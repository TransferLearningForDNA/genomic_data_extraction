import pytest

@pytest.fixture
def sequence_PNW69574():
    sequence = ("ATGGCAGGCCCGGGCGGCGCGGGCGGAGGTGCTCCCTCCATGGCCGCTGCTGCTGCCATG"
                "TACTCGTTCCAGACCGCGCCCCACTCCGAAGTGGTGGCTGGACTGCCAAAGCCCGGCCGC"
                "CCCGCTGTGAGCCGCCCCGTCACCGTGCCCGACCTGTCCGTGGGCGGCATTGGCGCGGGG"
                "GCAGCAGCAGCGGGGGGAGGAGGCGGAGGAGGAGCAGCGGGAGGAGGAGGCGGAGGAGGA"
                "GCGGGAGGAGGAGCGGGAGGAGGTGGAGCGGGAGGAGGTGGAGCAGGTGGAGCGGGAGGA"
                "GGTGGCGTGGCGGCTGCGTTGTTTGGAGGCGGGCAGCTGCCTGCGGCAGCGGGGCCGGGG"
                "CCGACAGTGCACGGCAGCTACACCTCTGGTAACGGTAACGGTTCCTACGCCAACGGCCCC"
                "CACGGCGGCTACTCCCACGGCGGTTACCCCCACGGCAGTTACCCACACGGCAGTTACGCC"
                "AACGGCGGCGGCGACCTGACCAGCCGCTCCGTGGACAGCGAGCTGGCGGAGGCGTCGGAG"
                "CTGCACTTCTACCGCAACACGCGCATCCTGCACCCCTGGGAGATCGCGGGCATGGGGGGA"
                "GGTGGAGGGGGAGGAGGAGGAGGAGGAGGGGCAGGACTGGGGGTGGTGGGAAGCAGTGCC"
                "GGAGGAGGAGGAGGAGGCGTGACCGCGTCCGCGGACTTCGCACGAGGCGGCGGTGGAGCC"
                "GGCGGGGCTGCCGGCGGCGGCGGCGGCGGCGGCGGCTGGGTGGTCACGGGCGCACACCGG"
                "CGTGCCAACTATATGGCGGGCGCCAGCGGGCCCGGCGGCAGTAGCAGCGCCGTGGCCGCG"
                "GCTGCTACAGCCGCCTGGGCGCGGCCCGCCACGGAGGAGGGGTTCTACGTGTCGGCGGCG"
                "CGCGGCAGTCTCAGCGGCATGGGCGCCAGCGGCAGTAGCGGCACGGGGCTGGGGCTGGGG"
                "CTGGGCGGCGTGCAGGGCGTGTCGTACGGCGGCGGCGGCGGCAGCCGGCCGCCCACCGTG"
                "CCCCGCCTGCAGCTGGGCGGCCTGACCAGCGGCACCTCGTCACCCGCGCCGCCGCCACCG"
                "CCGCCGCCGCAGCAGCAGCAGTACGGCACTCAGCAGTACGGACAGCAGCCGCCGCCGCAG"
                "CAGCAGCATGGCTCCGCCTCCGGTGAGGACGGCCCGCACGCGCACCCCGCGCCGGCGGCG"
                "GCCCCCAAGCGCCACTCCATCGAGCTCGACCCGCTCCCCGGCGGCCCCGCCGCCGCCGCC"
                "GCCGCCGCCGCCGCCGCCGCACACCTGGCGGGCGGCCAGGCGGGACCGGGGGGCGCCAAC"
                "GGCGGGCCGCACATGGGCGACCCAGTGTCAGCGGCGGCGGCCGCCAACAGCGCCAACGGC"
                "GCCAATGGTGCGAACGGCCCGCCGGCGGCGGCGACGGCGGCATGGCTTACTCGCGGCGGC"
                "CTGGTGTCTGGTGGCTCGGTGGTGGTGGCGAACCTGTCAGGCGGCGGCGAGCTGCTGCTA"
                "CAGCCGGCGGCGGAGCCGGCGCCTGGTTCTGGCAGCGGCGGGCCGGCGTCGGCGGCGGCG"
                "GCGTCGCCGTCGGCCCTGGCGGCGGCGTCGGCGGCGGCGTTCAGCCGGCCCGGCAGTGTG"
                "CAGTCGCGCACTGGCGGCCTCATCCCCTACCCTTCCGCGCTGTACGGCCCAGCCACCGCA"
                "TACCTCGCCAAACTGCCGCCGCGCGCCTCGCCCCGCCGCTCCCCCCGCAACTCCCCCCGC"
                "GTCATGAGCGCGACCACCAACCCCAACCCGTCGTCGGCGGCGGCAGGCGCCGCCGCCGCC"
                "GCCGCCGCCGCCAGCGGCAGTATGTCGTACAGCGGCGTTGCCGGCGGCGCCGGAGCGCTG"
                "ACGGCGCCGCCGCCGCTGGCGCCGCATTCGTCCGCCAGCGCCGGCGCCGGCGGCCCGGCC"
                "GGCAAGCAGTACTTCCGAACCGCGTCTGACGGCGCCGTGATGGCTGGCGGCGGCGGTAGC"
                "GGCGGCGGCGGCGGCGGCGGCGGCGGTAGCGGCGGCGGCAGTGGGCCGCCGTCCGCCGCC"
                "ACGCCCTACGCCGCCAGCCGCTTTAGCGACGCTGACAGCGGCAGCCCGGCCGCTGCCGTA"
                "TCCGCCTGGGTGGCAAGCGCCCTCGAGGCGGGCCCTCCGCCGCAGCCGGCGGCAGCGGCG"
                "GCGGCGGCGGCGCCGCCGCCGTGTGCCATGACGCCCACCAGCGCACTGCTGGAGCAGGCT"
                "CGTGCGGGGCAGGTGGTGACCATTGAGCACATCCTGGCTGGCACCGCCGCCGCGCCGCCG"
                "CGCGGCTTTTCGCCGCCGCGCGCCGCCAAGCCCGACTCCTCCAGTCTGGCGGCGCTGCAG"
                "CAGGCCTTTCGAGGGCTGCAGCAGCAGGCGGCGGCGGCGGCGCGAGCCGGCGGCGGAGGC"
                "GGCGGCGGCGGCGGAGGGGGAGGAGGTGGAGCGGGTGGCGGTGGCGGCGGTGCCGCTGCC"
                "CGCGGCACGCCGTCGCGGGAGGACGTTTGGGAGGTGGCGGCTGCGATGCTGCGGCAGGTG"
                "GCGGCGGTGGCGGCGGCGGCGGGTGGGGCGCCCGGGGCGGCTGCGGCTGGGGAGGCGTCC"
                "GGCGGGGTGCGCAGCACGAGCCCCGGCGCGGCGCGGCCTGGCACCACCACCGGCCTGGCC"
                "GCGGGCAACTCACACACCACCTTCACCACCTTCACCACCACCAGCAACAGCAACAGCACT"
                "ATGAGCCTGGGCCCGCTGTACGGCGGCGCGTCGGCCGCTGCTACAGCCGGTGCCGGTGGT"
                "GCTGGTGCTAATGGTGCTGGCGCTAATGGTGCTGGTGCTACAGCCGGCGGCGGTGGCTGG"
                "GTGGTTGGACCTCGCCCGGGCGTGGCGCCGTTCAGCGAGGATGACGTGGCGTTCCAGCCG"
                "CTGCTGCCGCGTGACGAGGACGGATACGTGGCGGAGGCCGCCATCACCGGCCAGCAGGCG"
                "GCCCTGGGCACCGCCGTACAAGGCCTGGTGCTGCAGAATGAAAACGCGCTATACCACTGT"
                "CCCTGGCTACGCCTTCACTTATTGATTCATCACGAACACATCACCACCACCACCACCACC"
                "ACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACC"
                "ACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACCACC"
                "ACCACCACCACCGCCACCACCACCACCACCACCACCACCACCACCACCACCACTGGCCTG"
                "CAGGTGGGTGTGTCCAGTGTGGAGCGCGCGCACCTGCTCCACGGCGTGTGGGCCACTGCG"
                "CGGCAGCTGATGGCGGCGGCGCTGGCGGACAGGCAGGCGGCACGGGCCAAGCTGGCCGCG"
                "GTGCGGCGCGAGGCCGCCGCCGCCGCCGCCCGCGCCTCGCTGGAGGCGGACGCGCTGCGC"
                "CAGAACCTGTCCTCCGCCTTCCACCAGAACCAGCACCTGCTGGTGAAGGAGCGGGAGGCG"
                "GCGGAGGCGGCGGCGGCGGCCAAGGCCGAGCTCAGCAGGCTTCGCAAGGTGGTTGCTGAG"
                "GGCGAGGTGGAGTCGTTGGGGTCGGCACTGGGGGCGCTGAGGGACGCGCACGAGGCGGCA"
                "CGGGAGGAGCTGGAGGCGGCGCGGCAGCAGCTGGCGGAGCTAGAGGCGGACCTGGCGGAC"
                "GCGCGCACCGACGCCGCGCTGGCCGCCGCCCGCGCCGCCGCCGCCGAGGGGCAGGCGGCG"
                "GCGCTGGCGGGTGAGGTGCGGGCGCGCACGCCGCGGCCGCGCCGCGGGCTGGGCGCACTG"
                "GGGGAGCTGCTCACGGAGCCCAGCCAGCAGGCCGCGGTCATGTCGGCCCTGGCCGCCGGT"
                "GTGGCCCCCCTGGAGCTGCACCGCCTGCTACTGGGCCTCACAGCGCCGCTGGAGGGCGCA"
                "CCCGGCGGCGAGGACATACGGCCCTGGGCCGCCGCCTGCGGCTGCTGCCGAGCCGTGGTG"
                "CCGCCCTGGGCCGACCCCGCGCAGCACGCCGCCGCCACCGCGCCGCCGGCGGACGTGGCG"
                "GGCGGGCCGCTGGCGGCGCTGCTGGCGGCGGTGGCGGCGGGCGGCGGCGGCGGCGGCGGC"
                "GGCCGCGGGCCGAGGAGCAAGAGCCGGCCGGCTAGCCCCACTGGCGGCGGCGGCGGCGGC"
                "GGTGGTGTGGATGCGAAGAGTCGGCCTGCGAGCCCCGGTGGTGGTGGTGGTGCT")

    return sequence

@pytest.fixture
def promoter_terminator_PNW69574():
    
    promoter = "TTGAGGTCTTTGCTGTCGCCGCCATTGGGGTTGTCTAACCGCCCGGGCACGCGGTCCGTGAAGGCCGACACGCGCGGCCGCTGGCTCTTGGCAGCCGGCCGTATGGACTTGTTGGCCGCGAAGGACTTGTGGGAGCGGCTCTTGTCGAAGAAGGACTGATTCTCTCTCCGGTCTACTTGCCGCTTACCGCTGGGCGACACCGTGAGCAGGCGCATGGACTTGCCGCCAACGCCGGAGTCGGCGGGGGCCACCGCGGGCTCCCCGCTATGCCGCTCGTGGTCGGCGTCATAGTCGTGCACCGGCACAACGCCGGGCTTACTGCTGCTGCAGCCCATTTGTGAGGCAGGACTGTCAGCGCGCGCTCCTCAAGCGCAGGCTCGCGCGGGCCAGGTTACGTCCAGGAACAGTGGTTGTTCATGGCGACGAAGACGCGGGCTCGCCACGCTGCCCAAGAGGCTTATGCCAGCGGATACAAACTATGTAAATGCTTCGTCCGCAGCTGCCACTGTTAAAGCTCACAACACTGCTTTAGCTGCTGCAACGCCAAGCTCTGAAGCGCTCCCGGCCGGTCCGCGGTGCGGGCCGGCCGTATGGAGCTAGCTGAATGCTGCTAAAAAGAATAATGTCAAGCGAAGCCTTGCCAAGCTGGGAGGCAGTTGAAGTGCACTTCGTCGCAGAGCCCCGACTGTCAGGTATATGGCCTATCCGTATTAGGTGAAATACACGCAGCAGCAAGATGAGTGCAATACCACAGGGCGCGCTTGTAGGTGAAGGAAGAGCGAGTAAGGTCGCCTCAGTTGGGGACTCAAAGCCGCAGCTTTCTTGCGAGAGTATGAGGCTAGAAAGGCTGTGTACTTGGTTAGATATGGAATAATGAAGGCTGGCAGACGTGTGGCACCGCTGAGAGCAAGCTCTAAGGACGCGCCCATGTGCAGCGCGAGAGCGACCAAACAGATTTGCACGCTCCAGGAAAAAATGCAGACGCTTCCAAGTCTGATAT"
    terminator = "TTGCTTGTACCCTTTTGCTCCATTATTCTGCTGTTAATTCTGTCTTGCTCTTATCCTCCCCCCTTCAAATCATTCGTCGTGAATTATGAATGCCCCAAATCCCCAAAAACACAGGCCGCGGTCATGTCGGCCCTGGCCGCCGGTGTGGCCCCCCTGGAGCTGCACCGCCTGCTACTGGGCCTCACAGCGCCGCTGGAGGGCGCACCCGGCGGCGAGGACATACGGCCCTGGGCCGCCGCCTGCGGCTGCTGCCGAGCCGTGGTGCCGCCCTGGGCCGACCCCGCGCAGCACGCCGCCGCCACCGCGCCGCCGGCGGACGTGGCGGGCGGGCCGCTGGCGGCGCTGCTGGCGGCGGTGGCGGCGGGCGGCGGCGGCGGCGGCGGCGGCCGCGGGCCGAGGAGCAAGAGCCGGCCGGCTAGCCCCACTGGCGGCGGCGGCGGCGGCGGTGGTGTGGATGCGAAGAGTCGGCCTGCGAGCCCCGGTGGTGGTGGTGGTGCTGG"

    return promoter, terminator

@pytest.fixture
def utr_data():
# Mock input data
    data = {
        'UTR': [
            {'type': 'five_prime_utr', 'start': 100, 'end': 200, 'seq_region_name': 'chr1'},
            {'type': 'three_prime_utr', 'start': 300, 'end': 400, 'seq_region_name': 'chr1'}
        ],
        'strand': '+',
    }

    # Expected output
    expected_utr5 = [(100, 200)]
    expected_utr3 = [(300, 400)]
    expected_chromosome = 'chr1'
    expected_strand = '+'

    return data, expected_utr5, expected_utr3, expected_chromosome, expected_strand