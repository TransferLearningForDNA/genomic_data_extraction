# -*- coding: utf-8 -*-
"""calculateRNAdataRSDandfilter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GYZtJtG_Lx7zbhgtxP6Ngk6NQP39t6B9
"""

import pandas as pd
import numpy as np

# I created a dummy dataset with 'ensembl_gene_id' as a unique identifier for each gene and some made-up expression levels for these genes across different conditions
# need to replace this with actual data when available

# Creating a dummy dataset with 10 genes and their expression levels in 5 conditions
np.random.seed(0)  # For reproducible random data
dummy_data = {
    'ensembl_gene_id': [f'ENSG{str(i).zfill(11)}' for i in range(1, 11)],
    'condition_1': np.random.poisson(lam=100, size=10),
    'condition_2': np.random.poisson(lam=100, size=10),
    'condition_3': np.random.poisson(lam=100, size=10),
    'condition_4': np.random.poisson(lam=100, size=10),
    'condition_5': np.random.poisson(lam=100, size=10),
}

# Convert the dictionary to a DataFrame
df = pd.DataFrame(dummy_data)

# Function to calculate the RSD
def calculate_rsd(df, gene_id_column):
    # Calculate the mean and standard deviation across the row
    df['mean'] = df.iloc[:, 1:].mean(axis=1)
    df['std_dev'] = df.iloc[:, 1:-1].std(axis=1)
    # Calculate the RSD (Relative Standard Deviation)
    df['rsd'] = df['std_dev'] / df['mean']
    return df

# Apply the function to the dataframe
df_rsd = calculate_rsd(df, 'ensembl_gene_id')

# Filter the genes with RSD < 2
filtered_genes = df_rsd[df_rsd['rsd'] < 2]

df_rsd, filtered_genes

